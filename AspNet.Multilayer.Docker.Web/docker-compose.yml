version: "3"

services:
  postgres-docker:
    image: postgres
    container_name: MultilayerDemoPostgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_HOST_DIR}:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - netcore-dev

  sqlserver-docker:
    image: mcr.microsoft.com/mssql/server
    container_name: MultilayerDemoSqlServer
    ports:
      - "${SQLSERVER_PORT}:1433"
    volumes:
      - ${SQLSERVER_HOST_DIR}:/var/opt/mssql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - MSSQL_SA_PASSWORD=${SQLSERVER_PASSWORD}
    networks:
      - netcore-dev
  
  netcore:
    image: aspnetmultilayer:dev
    container_name: AspNetMultilayerDocker
    ports:
      - "${HOST_PORT}:80"
    build:
      context: ../
      dockerfile: ./Dockerfile
    # command: bash -c "cd /app/AspNet.Multilayer.Docker.Web && dotnet run"
    tty: true
    networks: 
      - netcore-dev
    depends_on:
      - postgres-docker
      - sqlserver-docker

networks:
  netcore-dev:
    driver: bridge
